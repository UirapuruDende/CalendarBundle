---
parameters:
  dende_calendar.id_generator.class:            Dende\Calendar\Application\Generator\Doctrine\IdGenerator
  dende_calendar.calendar_repository.class:     Dende\CalendarBundle\Repository\ORM\CalendarRepository
  dende_calendar.event_repository.class:        Dende\CalendarBundle\Repository\ORM\EventRepository
  dende_calendar.occurrences_repository.class:  Dende\CalendarBundle\Repository\ORM\OccurrenceRepository

services:

#model managers

  dende_calendar.entity_manager:
    class: %doctrine.orm.entity_manager.class%
    factory_service: doctrine
    factory_method: getManager
    arguments:
     - '%dende_calendar.model_manager_name%'

# repositories

  dende_calendar.calendar_repository:
    class: %dende_calendar.calendar_repository.class%
    factory_service: dende_calendar.entity_manager
    factory_method: "getRepository"
    arguments: ["Calendar:Calendar"]

  dende_calendar.event_repository:
    class: %dende_calendar.event_repository.class%
    factory: [@dende_calendar.entity_manager, "getRepository"]
    arguments: ["Calendar:Calendar\Event"]

  dende_calendar.occurrences_repository:
    class: %dende_calendar.occurrences_repository.class%
    factory_service: dende_calendar.entity_manager
    factory_method: "getRepository"
    arguments: ["%resolved_occurrence_class%"]

# custom services

  dende_calendar.occurrences_provider:
    class: Dende\CalendarBundle\Service\OccurrencesProvider
    arguments:
      - @=service(parameter('dende_calendar.occurrence_repository_service_name'))
      - @router.default
      - 'dende_calendar_default_updateevent'

  dende_calendar.id_generator:
    class: %dende_calendar.id_generator.class%
    arguments:
      - "@dende_calendar.entity_manager"

  dende_calendar.new_calendar_creation:
    class: 'Dende\Calendar\Application\Handler\CreateCalendarHandler'
    arguments:
      - "@=service(parameter('dende_calendar.calendar_factory_service_name'))"
      - "@=service(parameter('dende_calendar.calendar_repository_service_name'))"
      - "@event_dispatcher"

#forms
  dende_calendar.form_type.abstract_event:
    class: Dende\CalendarBundle\Form\Type\AbstractEventType
    abstract: true

  dende_calendar.form_type.create_event:
    class: Dende\CalendarBundle\Form\Type\CreateEventType
    parent: dende_calendar.form_type.abstract_event
    tags:
      - {name: form.type, alias: create_event}

  dende_calendar.form_type.update_event:
    class: Dende\CalendarBundle\Form\Type\UpdateEventType
    parent: dende_calendar.form_type.abstract_event
    tags:
      - {name: form.type, alias: update_event}

# handlers

  dende_calendar.handler.create_event:
    class: Dende\Calendar\Application\Handler\CreateEventHandler
    arguments:
      - @dende_calendar.calendar_repository
      - @=service(parameter('dende_calendar.event_repository_service_name'))
      - @=service(parameter('dende_calendar.occurrence_repository_service_name'))
      - @=service(parameter('dende_calendar.event_factory_service_name'))
      - @=service(parameter('dende_calendar.occurrence_factory_service_name'))
    tags:
      - {name: tactician.handler, command: 'Dende\Calendar\Application\Command\CreateEventCommand' }

  dende_calendar.handler.update_event:
    class: Dende\Calendar\Application\Handler\UpdateEventHandler
    arguments:
      - @=service(parameter('dende_calendar.event_repository_service_name'))
      - @=service(parameter('dende_calendar.occurrence_repository_service_name'))
      - @=service(parameter('dende_calendar.event_factory_service_name'))
      - @=service(parameter('dende_calendar.occurrence_factory_service_name'))

  dende_calendar.handler.create_calendar:
    class: Dende\Calendar\Application\Handler\CreateCalendarHandler
    arguments:
      - @dende_calendar.factory.calendar
      - @dende_calendar.calendar_repository
      - @event_dispatcher

# update strategies

  dende_calendar.update_strategy.single:
    class: Dende\Calendar\Application\Handler\UpdateStrategy\Single
    tags:
      - {name: dende_calendar.update_strategy }

  dende_calendar.update_strategy.overwrite:
    class: Dende\Calendar\Application\Handler\UpdateStrategy\Overwrite
    tags:
      - {name: dende_calendar.update_strategy }

  dende_calendar.update_strategy.next_inclusive:
    class: Dende\Calendar\Application\Handler\UpdateStrategy\NextInclusive
    tags:
      - {name: dende_calendar.update_strategy }

# factories

  dende_calendar.factory.calendar:
    class: Dende\Calendar\Application\Factory\CalendarFactory
    arguments:
      - @dende_calendar.id_generator

  dende_calendar.factory.event:
    class: Dende\Calendar\Application\Factory\EventFactory
    arguments:
      - @dende_calendar.id_generator

  dende_calendar.factory.occurrence:
    class: Dende\Calendar\Application\Factory\OccurrenceFactory
    arguments:
      - @dende_calendar.id_generator

# listeners

  dende_calendar.listener.doctrine_event_listener:
    class: Dende\CalendarBundle\Listener\DoctrineEventListener
    arguments: ['%dende_calendar.mapping%']
    tags:
      - { name: doctrine.event_listener, event: loadClassMetadata, em: '%dende_calendar.model_manager_name%' }
