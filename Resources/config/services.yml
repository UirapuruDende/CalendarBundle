---
parameters:
  dende_calendar.id_generator.class:            Dende\Calendar\Application\Generator\Doctrine\IdGenerator
  dende_calendar.calendar_repository.class:     Dende\CalendarBundle\Repository\ORM\CalendarRepository
  dende_calendar.event_repository.class:        Dende\CalendarBundle\Repository\ORM\EventRepository
  dende_calendar.occurrences_repository.class:  Dende\CalendarBundle\Repository\ORM\OccurrenceRepository

services:

#model managers

  dende_calendar.entity_manager:
    class: %doctrine.orm.entity_manager.class%
    factory_service: doctrine
    factory_method: getManager
    arguments:
     - %dende_calendar.model_manager_name%

  dende_calendar.viewmodel_entity_manager:
    class: %doctrine.orm.entity_manager.class%
    factory_service: doctrine
    factory_method: getManager
    arguments:
     - %dende_calendar.viewmodel_manager_name%

# repositories

  dende_calendar.calendar_repository:
    class: %dende_calendar.calendar_repository.class%
    factory_service: dende_calendar.entity_manager
    factory_method: "getRepository"
    arguments: ["Calendar:Calendar"]

  dende_calendar.event_repository:
    class: %dende_calendar.event_repository.class%
    factory_service: dende_calendar.entity_manager
    factory_method: "getRepository"
    arguments: ["Calendar:Calendar\Event"]

  dende_calendar.occurrences_repository:
    class: %dende_calendar.occurrences_repository.class%
    factory_service: dende_calendar.entity_manager
    factory_method: "getRepository"
    arguments: ["Calendar:Calendar\Event\Occurrence"]

# custom services

  dende_calendar.occurrences_provider:
    class: Dende\CalendarBundle\Service\OccurrencesProvider
    arguments:
      - @dende_calendar.occurrences_repository
      - @router.default
      - 'dende_calendar_default_updateevent'

  dende_calendar.id_generator:
    class: %dende_calendar.id_generator.class%
    arguments: [@dende_calendar.entity_manager]

  dende_calendar.new_calendar_creation:
    class: Dende\Calendar\Application\Handler\CreateCalendarHandler
    arguments:
      - @dende_calendar.factory.calendar
      - @dende_calendar.calendar_repository
      - @event_dispatcher

#forms

  dende_calendar.form_type.create_event:
    class: Dende\CalendarBundle\Form\Type\CreateEventType
    tags:
      - {name: form.type, alias: create_event}

  dende_calendar.form_type.update_event:
    class: Dende\CalendarBundle\Form\Type\UpdateEventType
    tags:
      - {name: form.type, alias: update_event}

# handlers

  dende_calendar.handler.create_event:
    class: Dende\Calendar\Application\Handler\CreateEventHandler
    arguments:
      - @dende_calendar.event_repository
      - @dende_calendar.occurrences_repository
      - @dende_calendar.factory.event
      - @dende_calendar.factory.occurrence


  dende_calendar.handler.remove_event:
    class: Dende\Calendar\Application\Handler\RemoveEventHandler
    arguments:
      - @dende_calendar.event_repository
      - @dende_calendar.occurrences_repository

  dende_calendar.handler.remove_occurrence:
    class: Dende\Calendar\Application\Handler\RemoveOccurrenceHandler
    arguments:
      - @dende_calendar.handler.remove_event
      - @dende_calendar.event_repository

  dende_calendar.handler.update_event:
    class: Dende\Calendar\Application\Handler\UpdateEventHandler
    calls: # move to compiler pass
#      - [addStrategy, ['single', @dende_calendar.update_strategy.single]]
      - [addStrategy, ['overwrite', @dende_calendar.update_strategy.overwrite]]
    arguments:
      - @dende_calendar.event_repository
      - @dende_calendar.occurrences_repository
      - @dende_calendar.factory.event
      - @dende_calendar.factory.occurrence

  dende_calendar.update_strategy.single: # move to compiler pass
    class: Dende\Calendar\Application\Handler\UpdateStrategy\Single
    tags:
      - {name: dende_calendar.update_strategy }

  dende_calendar.update_strategy.overwrite: # move to compiler pass
    class: Dende\Calendar\Application\Handler\UpdateStrategy\Overwrite
    tags:
      - {name: dende_calendar.update_strategy }

# factories

  dende_calendar.factory.calendar:
    class: Dende\Calendar\Application\Factory\CalendarFactory
    arguments:
      - @dende_calendar.id_generator

  dende_calendar.factory.event:
    class: Dende\Calendar\Application\Factory\EventFactory
    arguments:
      - @dende_calendar.id_generator

  dende_calendar.factory.occurrence:
    class: Dende\Calendar\Application\Factory\OccurrenceFactory
    arguments:
      - @dende_calendar.id_generator

# validation

  validator.calendar_name:
    class: Dende\CalendarBundle\Validator\CalendarNameValidator
    tags:
      - { name: validator.constraint_validator, alias: validator.calendar_name_validator}

  validator.weekdays_selected:
    class: Dende\CalendarBundle\Validator\SelectWeekdayForSerialValidator
    tags:
      - { name: validator.constraint_validator, alias: validator.weekday_for_serial_validator}
