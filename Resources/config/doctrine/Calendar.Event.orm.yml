Dende\Calendar\Domain\Calendar\Event:
  type: entity
  inheritanceType: SINGLE_TABLE
  discriminatorColumn:
    name: discriminator
    type: string
  discriminatorMap:
    bundle: Dende\Calendar\Domain\Calendar\Event
  table: events
  repositoryClass: Dende\CalendarBundle\Repository\ORM\EventRepository

  gedmo:
    soft_deleteable:
      field_name: deletedAt
      time_aware: false

  id:
    id:
      type: guid
      generator: { strategy: UUID }

  indexes:
    index_dende_events_dates:
      columns:
        - startDate
        - endDate

  embedded:
    type:
      class: Dende\Calendar\Domain\Calendar\Event\EventType
      columnPrefix: false

    repetitions:
      class: Dende\Calendar\Domain\Calendar\Event\Repetitions
      columnPrefix: false

    duration:
      class: Dende\Calendar\Domain\Calendar\Event\Duration
      columnPrefix: false

  manyToOne:  # event is the owning side!
    calendar:
      targetEntity: Dende\Calendar\Domain\Calendar
      inversedBy: events
      cascade: ["all"]
      joinColumns:
        CalendarId:
          name: calendar_id
          referencedColumnName: id
          onDelete: SET NULL
          onUpdate: RESTRICT

  oneToMany:
    occurrences:
      targetEntity: Dende\Calendar\Domain\Calendar\Event\Occurrence
      mappedBy: event
      orphanRemoval: true
      cascade: ["all"] # required, must stay here or exception will be thrown

  oneToOne:
    previousEvent:
      targetEntity: Dende\Calendar\Domain\Calendar\Event
      referencedBy: previousEvent
      joinColumns:
        previousEvent:
          name: previous_event_id
          referencedColumnName: id
          onDelete: SET NULL
          onUpdate: RESTRICT
  fields:
    startDate:
      type: datetime
      nullable: false

    endDate:
      type: datetime
      nullable: false

    title:
      type: string
      nullable: false
      length: 255

    deletedAt:
      type: datetime
      nullable: true